<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script type="text/javascript" src="/reason_package/jquery/jquery_latest.js"></script>
<link rel="stylesheet" type="text/css" href="/global_stock/nav/nav.css" />
<title>Carleton College: Computer Science: Newsletter: Carleton Sentinel: Winter Term Course Descriptions (Text Only)</title>
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/publication/default_styles.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/modules.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/default_styles.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/dept_styles_new.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/mathcs_subsites.css" />
<link rel="stylesheet" type="text/css" href="/curricular/cs/assets/stylesheet.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/textonly_styles.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/print_styles.css" media="print" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="shortcut icon" href="/favicon.ico" />
<meta name="description" content="Carleton Sentinel, the CS Newsletter" />
<meta name="keywords" content="Computer Science, Newsletter, Department, CS, Carleton Sentinel, Questions, Problems, News, Information" />
<meta name="robots" content="none" />
<link rel="alternate" type="application/rss+xml" href="/curricular/cs/feeds/blogs/sentinel" title="RSS 2.0 feed" />
<script type="text/javascript" src="/global_stock/js/site_search_form.js"></script>
</head>
<body class="textOnly nocrumbs"><div class="hide"><a href="#content" class="hide">Skip Navigation</a></div>


<p class="fullGraphicsLink"><a href="?story_id=680992">View full graphics version of this page</a></p>


<h1><a href="http://www.carleton.edu">Carleton College</a></h1>
<div id="wrapper" class="textOnlyView">
<div class="bannerAndMeat textOnly">
<div class="banner">
<div class="bannerInfo">
<h1 class="siteName"><a href="/curricular/cs/?textonly=1" class="siteLink"><span>Computer Science</span></a></h1>
</div>
<div class="bannerXtra">

<form method="post" action="http://search.carleton.edu/search.php" name="search" class="searchForm">
<input type="text" name="words" size="23" value="Search Computer Science" onfocus='if(this.value=="Search Computer Science") {this.value="";}' onblur='if(this.value=="") {this.value="Search Computer Science";}' class="searchInputBox" id="minisiteSearchInput" />
<a href="javascript:document.search.submit()" class="searchSubmitLink">Go</a>
<noscript><input name="go" type="submit" value="go" /></noscript>
<input type="hidden" name="restrict" value="http://apps.carleton.edu/curricular/cs/" />
<input type="hidden" name="method" value="and" /><input type="hidden" name="format" value="builtin-long" /><input type="hidden" name="sort" value="score" /><input type="hidden" name="matchesperpage" value="10" /><input type="hidden" name="config" value="htdig" /><input type="hidden" name="exclude" value="" />
</form>

</div>
</div>
<div class="layout">
<div class="content"><a name="content"></a>
<div class="contentHead">


<h2 class="pageTitle"><span><a href="http://apps.carleton.edu/curricular/cs/news/?textonly=1">Newsletter: Carleton Sentinel</a></span></h2>

</div>
<div class="contentMain">


<div id="blogDescription">
<p>&quot;Keeping you in the loop since 2005&quot;</p></div>


</div>
<div class="contentPost">


<div id="blog" class="publication">
<div class="persistent">

<div id="filtering">
<form method="get" action="?" class="searchForm" >
<input type="hidden" name="textonly" value="1"><label for="filterSearch1">Search:</label> <input name="search" value="" size="10" class="search" id="filterSearch1" />
 <input class="submit" name="go" type="submit" value="Go" />
</form>
</div>
<div class="loginlogout logout"><a href="https://apps.carleton.edu/login/"><span class="action">Log In</span></a></div>
</div>
<div class="item">
<div class="fullPost"><div class="primaryContent">
<h3 class="postTitle">Winter Term Course Descriptions</h3>
<div class="date">October 22, 2010</div>
<div class="text"><h4>Winter Term Course Descriptions</h4>
<p><strong>CS 201: Data Structures. Instructor: Amy Csizmar Dalal, Time:  4a</strong><br />
Prerequisite: CS 111 or consent of the instructor.</p>
<p>Think back to your favorite assignment from Intro to Computer Science. Did you ever get the feeling that "there has to be a better/smarter way to do this problem?" The Data Structures course is all about how to store information intelligently and access it efficiently. How can Google take your query, compare it to billions of web pages, and return the answer in less than one second? How can one balance the tradeoff of being able to store information so that it can be retrieved quickly, but also can be quickly updated? Ideas such as stacks, queues, trees, linked lists, graphs and hash tables will be examined, and we'll look at how to program them as well as how to analyze them for their performance.</p>
<p><strong>CS 202: Mathematics of Computer Science. Instructor: David Liben-Nowell,<br />
Time: 2a</strong><br />
Prerequisite: CS 111 &amp; Math 111 or consent of instructor</p>
<p>There are a bunch of fundamental topics that you'll keep running into in your CS life -- things like basic logic (write an if statement; google for "schiller -carleton"), probability (hash tables, randomized quicksort) and networks (road networks for online maps, the Internet). In this class, we'll talk about these foundational concepts of computer science, along with a variety of other mathematically inclined topics that will serve you well in the future. Along the way, we'll discuss cryptography, Deep Blue, six degrees of separation, and why, even after you put a hearty scratch in the back of a CD, it still plays just fine.</p>
<p><strong>CS 252: Algorithms. Instructor: David Liben-Nowell, Time:  3a</strong><br />
Prerequisites: CS 201; CS 202 or Math 236</p>
<p>What with Halloween here and all, you start to wonder: suppose that, after you don your Steve Poskanzer costume and head out into the night, you want to hit all of the houses of Carleton's political science professors while you're trick-or-treating. (They have the best candy.) But you're feeling lazy, so you want to be sure that your route is as efficient as possible. So you decide to write a program to solve this problem. How would you go about designing a solution for this problem? How fast can your program be? Sadly, some problems are just plain hard. How do you solve the easy problems? How do you identify the hard problems? How do you deal with a hard problem when you're confronted with it? CS 252, which counts toward both mathematics and computer science majors, is concerned with developing techniques for the design and analysis of algorithms. We will cover several major algorithm design techniques, computational complexity focusing on NP-completeness, and algorithmic techniques for intractable problems. <strong><br /></strong></p>
<p><strong>CS 341:  Cryptography.  Instructor:  Jeff Ondich, Time:  1a</strong><br />
Prerequisites:  CS 201; CS 202 or Math 236</p>
<p>If you want to send information that only your intended recipient can understand, you need cryptography, the art of securing messages. Cryptography is at the heart of applications like on-line commerce, password-protected computer accounts, secure wireless networks, and cash withdrawal from automatic teller machines. This course will focus on these and other applications to motivate our study of the mathematics, protocols, and history of cryptography and cryptanalysis.</p>
<p><strong>CS 361: Evolution Computing &amp; Artificial Life, Sherri Goings,<br />
Time:  4-5c (TTH 1:15-3:00)</strong><br />
Prerequisites:  CS 111, CS 201 or CS 204 or Biology 125</p>
<p>Have you ever wished that instead of spending 2 hours writing a program to solve a difficult problem you could instead just tell the computer to do the work and go play Ultimate Frisbee for 2 hours knowing the solution will be waiting for you when you return?  One of the goals of artificial intelligence is to be able to view the computer as a “black box”, you simply give it the problem you want to solve, and it gives you the answer, without you needed to understand all of the internal workings.  Evolutionary computation seeks to create this black box by harnessing the power of Darwinian evolution to solve computational problems.  Instead of programming a solution, the user simply initializes a population of very simple (and probably very bad) solutions, and then sits back while the population evolves until a good solution appears.  Evolutionary Computation (EC) has shown promise in evolving novel solutions to real-world problems, such as antennas actually deployed on Nasa satellites, neural controllers for legged robots, and programs that choose sound investments, however EC is a current active field of research with many open questions to be answered.  In this course students will develop a broad understanding of developing and analyzing current evolutionary computation systems, and develop a deeper understanding of at least one specific evolutionary computation topic through a research project.</p></div>
</div>
</div></div>
<div class="back"><div><a href="?textonly=1&amp;page=1">Return to Newsletter: Carleton Sentinel</a></div></div></div>


</div>
</div>


<p class="fullGraphicsLink"><a href="?story_id=680992">View full graphics version of this page</a></p>


<div class="navigation">


<div id="minisiteNavigation"><div class="list"><ul class="navListTop"><li class="navListItem open"><a href="/curricular/cs/?textonly=1" class="home"><span>Computer Science Home</span></a><ul class="navList"><li class="navListItem closed"><a href="/curricular/cs/overview/?textonly=1">Overview</a></li><li class="navListItem closed item1"><a href="/curricular/cs/faculty/?textonly=1">Faculty &amp; Staff</a></li><li class="navListItem closed item2"><a href="/curricular/cs/courses/?textonly=1">Courses</a></li><li class="navListItem closed item3"><a href="/curricular/cs/major/?textonly=1">The Major</a></li><li class="navListItem closed item4"><a href="/curricular/cs/resources/?textonly=1">Resources</a></li><li class="navListItem closed item5"><a href="/curricular/cs/events/?textonly=1">Events</a></li><li class="navListItem open current item6"><a href="/curricular/cs/news/?textonly=1"><strong>Newsletter</strong></a></li><li class="navListItem closed item7"><a href="/curricular/cs/students/?textonly=1">Students</a></li><li class="navListItem closed item8 jump"><a href="http://www.mathcs.carleton.edu/cs_comps">Computer Science Comps</a></li><li class="navListItem closed item9"><a href="/curricular/cs/summerresearch/?textonly=1">Summer Research Opportunities</a></li><li class="navListItem closed item10"><a href="/curricular/cs/CS_Career_Resources/?textonly=1">Career Resources</a></li><li class="navListItem closed item11"><a href="/curricular/cs/newstudents/?textonly=1">Guide for New Students</a></li></ul></li></ul>
</div></div>

</div>
</div>
</div>
<div id="footer" class="maintained">


<div id="maintained">
<div id="maintainer">Computer Science pages maintained by <a href="mailto:sjandro@carleton.edu">Sue Jandro</a></div><div id="lastUpdated">This page was last updated on 22 October 2010</div></div>




<p id="footerLoginLink"><a href="https://apps.carleton.edu/login/">Login</a></p>

</div>
</div>
</body>
</html>
