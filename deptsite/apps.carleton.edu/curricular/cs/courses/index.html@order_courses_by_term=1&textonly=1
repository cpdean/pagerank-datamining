<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script type="text/javascript" src="/reason_package/jquery/jquery_latest.js"></script>
<link rel="stylesheet" type="text/css" href="/global_stock/nav/nav.css" />
<title>Carleton College: Computer Science: Course Information (Text Only)</title>
<link rel="stylesheet" type="text/css" href="/global_stock/css/reason_modules/courses/courses.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/modules.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/default_styles.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/dept_styles_new.css" />
<link rel="stylesheet" type="text/css" href="/global_stock/css/mathcs_subsites.css" />
<link rel="stylesheet" type="text/css" href="/curricular/cs/assets/stylesheet.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/textonly_styles.css" />
<link rel="stylesheet" type="text/css" href="/reason_package/reason_4.0/www/css/print_styles.css" media="print" />
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="shortcut icon" href="/favicon.ico" />
<meta name="description" content="Course descriptions, class schedules, and syllabi." />
<meta name="keywords" content="Computer Science, CS, Courses, Classes, Times, Schedule, Course Pages, Syllabi" />
<meta name="robots" content="none" />
<script type="text/javascript" src="/global_stock/js/site_search_form.js"></script>
</head>
<body class="textOnly nocrumbs"><div class="hide"><a href="#content" class="hide">Skip Navigation</a></div>


<p class="fullGraphicsLink"><a href="?order_courses_by_term=1">View full graphics version of this page</a></p>


<h1><a href="http://www.carleton.edu">Carleton College</a></h1>
<div id="wrapper" class="textOnlyView">
<div class="bannerAndMeat textOnly">
<div class="banner">
<div class="bannerInfo">
<h1 class="siteName"><a href="/curricular/cs/?textonly=1" class="siteLink"><span>Computer Science</span></a></h1>
</div>
<div class="bannerXtra">

<form method="post" action="http://search.carleton.edu/search.php" name="search" class="searchForm">
<input type="text" name="words" size="23" value="Search Computer Science" onfocus='if(this.value=="Search Computer Science") {this.value="";}' onblur='if(this.value=="") {this.value="Search Computer Science";}' class="searchInputBox" id="minisiteSearchInput" />
<a href="javascript:document.search.submit()" class="searchSubmitLink">Go</a>
<noscript><input name="go" type="submit" value="go" /></noscript>
<input type="hidden" name="restrict" value="http://apps.carleton.edu/curricular/cs/" />
<input type="hidden" name="method" value="and" /><input type="hidden" name="format" value="builtin-long" /><input type="hidden" name="sort" value="score" /><input type="hidden" name="matchesperpage" value="10" /><input type="hidden" name="config" value="htdig" /><input type="hidden" name="exclude" value="" />
</form>

</div>
</div>
<div class="layout">
<div class="content"><a name="content"></a>
<div class="contentHead">


<h2 class="pageTitle"><span>Course Information</span></h2>

</div>
<div class="contentPost">


<div id="courses">
<ul id="courseViewSwitcher"><li>2010-2011 Courses: </li>
<li class="first"><a href="?">Browse by Course Number</a></li><li class="last"><strong>Browse by Term</strong></li></ul><h3>Fall 2010</h3>
<ul class="courseList byTerm">
<li>
<div class="catalog">
<a name="CS111_Introducti"></a>
<h4>CS 111: Introduction to Computer Science</h4> This course will introduce you to computer programming and the design of algorithms. By writing programs to solve problems in areas such as image processing, text processing, and simple games, you will learn about recursive and iterative algorithms, complexity analysis, graphics, data representation, software engineering, and object-oriented design. No previous programming experience is necessary. Students who have received credit for Computer Science 201 or above are not eligible to enroll in Computer Science 111. No prerequisites.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE111">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE111">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE111">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS201_Data_Struc"></a>
<h4>CS 201: Data Structures</h4> Think back to your favorite assignment from Introduction to Computer Science. Did you ever get the feeling that "there has to be a better/smarter way to do this problem?" The Data Structures course is all about how to store information intelligently and access it efficiently. How can Google take your query, compare it to billions of web pages, and return the answer in less than one second? How can one store information so as to balance the competing needs for fast data retrieval and fast data modification? To help us answer questions like these, we will analyze and implement stacks, queues, trees, linked lists, graphs and hash tables. Students who have received credit for a course for which Computer Science 201 is a prerequisite are not eligible to enroll in Computer Science 201. Prerequisite: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE201">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE201">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE201">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS204_Software_D"></a>
<h4>CS 204: Software Design</h4> It’s easy to write a mediocre computer program, and lots of people do it. Good programs are quite a bit harder to write, and are correspondingly less common. In this course, we will study techniques, tools, and habits that will improve your chances of writing good software. While working on several medium-sized programming projects, we will investigate code construction techniques, debugging and profiling tools, testing methodologies, UML, principles of object-oriented design, design patterns, and user interface design. Prerequisite: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE204">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE204">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#adalal">A. Csizmar Dalal</a></strong>, <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jondich">J. Ondich</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS208_Computer_O"></a>
<h4>CS 208: Computer Organization and Architecture</h4> Computer processors are extraordinarily complex systems. The fact that they work at all, let alone as reliably as they do, is a monumental achievement of human collaboration. In this course, we will study the structure of computer processors, with attention to digital logic, assembly language, performance evaluation, computer arithmetic, data paths and control, pipelining, and memory hierarchies. Prerequisites: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE208">Fall 2010</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#adalal">A. Csizmar Dalal</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS251_Programmin"></a>
<h4>CS 251: Programming Languages</h4> What makes a programming language "like Python" or "like Java"? This course will look past superficial properties (like indentation) and into the soul of programming languages. We will explore a variety of topics in programming language construction and design: syntax and semantics, mechanisms for parameter passing, typing, scoping, and control structures. Students will expand their programming experience to include other programming paradigms, including functional languages like Scheme and ML. Prerequisites: Computer Science 201 or permission of instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE251">Fall 2010</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#dlibenno">D. Liben-Nowell</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS322_Natural_La"></a>
<h4>CS 322: Natural Language Processing</h4> Computers are poor conversationalists, despite decades of attempts to change that fact. This course will provide an overview of the computational techniques developed in the attempt to enable computers to interpret and respond appropriately to ideas expressed using natural languages (such as English or French) as opposed to formal languages (such as C++ or Lisp). Topics in this course will include parsing, semantic analysis, machine translation, dialogue systems, and statistical methods in speech recognition. Prerequisites: Computer Science 201 and 202 or permission of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE322">Fall 2010</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jondich">J. Ondich</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS331_Computer_N"></a>
<h4>CS 331: Computer Networks</h4> The Internet is composed of a large number of heterogeneous, independently-operating computer networks that work together to transport all sorts of data to points all over the world. The fact that it does this so well given its complexity is a minor miracle. In this class, we'll study the structure of these individual networks and of the Internet, and figure out how this "magic" takes place. Topics include TCP/IP, protocols and their implementations, routing, security, network architecture, DNS, and emerging applications and technologies such as peer-to-peer networking, WiFi, and WiMax. Prerequisites: CS 201 or consent of instructor<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE331">Fall 2010</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#adalal">A. Csizmar Dalal</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS400_Integrativ"></a>
<h4>CS 400: Integrative Exercise</h4> Senior Computer Science majors work in teams (typically four to seven students per team) on faculty-specified topics. Required of all senior majors. Prerequisite: Senior standing, Mathematics 121, Computer Science 111, 201, 202 (or Mathematics 236); one course from among Computer Science 204 or 208; two courses from among Computer Science 251, 252 and 254; one course from among Computer Science courses numbered 260 or above or Mathematics 311.<em> 6 credit; S/NC; Does not fulfill a distribution requirement, NE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE400">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE400">Winter 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
</ul>
<h3>Winter 2011</h3>
<ul class="courseList byTerm">
<li>
<div class="catalog">
<a name="CS111_Introducti"></a>
<h4>CS 111: Introduction to Computer Science</h4> This course will introduce you to computer programming and the design of algorithms. By writing programs to solve problems in areas such as image processing, text processing, and simple games, you will learn about recursive and iterative algorithms, complexity analysis, graphics, data representation, software engineering, and object-oriented design. No previous programming experience is necessary. Students who have received credit for Computer Science 201 or above are not eligible to enroll in Computer Science 111. No prerequisites.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE111">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE111">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE111">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS201_Data_Struc"></a>
<h4>CS 201: Data Structures</h4> Think back to your favorite assignment from Introduction to Computer Science. Did you ever get the feeling that "there has to be a better/smarter way to do this problem?" The Data Structures course is all about how to store information intelligently and access it efficiently. How can Google take your query, compare it to billions of web pages, and return the answer in less than one second? How can one store information so as to balance the competing needs for fast data retrieval and fast data modification? To help us answer questions like these, we will analyze and implement stacks, queues, trees, linked lists, graphs and hash tables. Students who have received credit for a course for which Computer Science 201 is a prerequisite are not eligible to enroll in Computer Science 201. Prerequisite: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE201">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE201">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE201">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS202_Mathematic"></a>
<h4>CS 202: Mathematics of Computer Science</h4> This course introduces some of the formal tools of computer science, using a variety of applications as a vehicle. You'll learn how to encode data so that when you scratch the back of a DVD, it still plays just fine; how to distribute "shares" of your floor's PIN so that any five of you can withdraw money from the floor bank account (but no four of you can); how to play chess; and more. Topics that we'll explore along the way include: logic and proofs, number theory, elementary complexity theory and recurrence relations, basic probability, counting techniques, and graphs. Prerequisites: Computer Science 111 and Mathematics 111; or permission of instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE202">Winter 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#dlibenno">D. Liben-Nowell</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS252_Algorithms"></a>
<h4>CS 252: Algorithms</h4> A course on techniques used in the design and analysis of efficient algorithms. We will cover several major algorithmic design paradigms (greedy algorithms, dynamic programming, divide and conquer, and network flow); applications of those techniques to a variety of domains (natural language processing, economics, computational biology, and data mining, for example); and computational complexity, particularly NP-completeness, including how to cope algorithmically when confronted with intractable problems. Prerequisites: Computer Science 201 and either Computer Science 202 or Mathematics 236.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE252">Winter 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#dlibenno">D. Liben-Nowell</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS341_Cryptograp"></a>
<h4>CS 341: Cryptography</h4> If you want to send information that only your intended recipient can understand, you need cryptography, the art of securing messages. Cryptography is at the heart of applications like on-line commerce, password-protected computer accounts, secure wireless networks, and cash withdrawal from automatic teller machines. This course will focus on these and other applications to motivate our study of the mathematics, protocols, and history of cryptography and cryptanalysis. Prerequisites: Computer Science 201 and either Computer Science 202 or Mathematics 236, or permission of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE341">Winter 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jondich">J. Ondich</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS361_Evolutiona"></a>
<h4>CS 361: Evolutionary Computing and Artificial Life</h4> An introduction to evolutionary computation and artificial life, with a special emphasis on the two way flow of ideas between evolutionary biology and computer science. Topics will include the basic principles of biological evolution, experimental evolution techniques, and the application of evolutionary computation principles to solve real problems. All students will be expected to complete and present a term project exploring an open question in evolutionary computation. Prerequisites: Computer Science 111; 201 or 204 or Biology 125.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE361">Winter 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#sgoings">S. Goings</a></strong>
</div>
<div class="dept">
<h5>Extended departmental description for CS 361</h5>
<p>Have you ever wished that instead of spending 2 hours writing a program to solve a difficult problem you could instead just tell the computer to do the work and go play Ultimate Frisbee for 2 hours knowing the solution will be waiting for you when you return?  One of the goals of artificial intelligence is to be able to view the computer as a “black box”, you simply give it the problem you want to solve, and it gives you the answer, without you needed to understand all of the internal workings.  Evolutionary computation seeks to create this black box by harnessing the power of Darwinian evolution to solve computational problems.  Instead of programming a solution, the user simply initializes a population of very simple (and probably very bad) solutions, and then sits back while the population evolves until a good solution appears.  Evolutionary Computation (EC) has shown promise in evolving novel solutions to real-world problems, such as anteneas actually deployed on Nasa satellites, neural controllers for legged robots, and programs that choose sound investements, however EC is a current active field of research with many open questions to be answered.  In this course students will develop a broad understanding of developing and analyzing current evolutionary computation systems, and develop a deeper understanding of at least one specific evolutionary computation topic through a research project.</p>
</div>
</li>
<li>
<div class="catalog">
<a name="CS400_Integrativ"></a>
<h4>CS 400: Integrative Exercise</h4> Senior Computer Science majors work in teams (typically four to seven students per team) on faculty-specified topics. Required of all senior majors. Prerequisite: Senior standing, Mathematics 121, Computer Science 111, 201, 202 (or Mathematics 236); one course from among Computer Science 204 or 208; two courses from among Computer Science 251, 252 and 254; one course from among Computer Science courses numbered 260 or above or Mathematics 311.<em> 6 credit; S/NC; Does not fulfill a distribution requirement, NE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE400">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE400">Winter 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
</ul>
<h3>Spring 2011</h3>
<ul class="courseList byTerm">
<li>
<div class="catalog">
<a name="CS111_Introducti"></a>
<h4>CS 111: Introduction to Computer Science</h4> This course will introduce you to computer programming and the design of algorithms. By writing programs to solve problems in areas such as image processing, text processing, and simple games, you will learn about recursive and iterative algorithms, complexity analysis, graphics, data representation, software engineering, and object-oriented design. No previous programming experience is necessary. Students who have received credit for Computer Science 201 or above are not eligible to enroll in Computer Science 111. No prerequisites.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE111">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE111">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE111">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS201_Data_Struc"></a>
<h4>CS 201: Data Structures</h4> Think back to your favorite assignment from Introduction to Computer Science. Did you ever get the feeling that "there has to be a better/smarter way to do this problem?" The Data Structures course is all about how to store information intelligently and access it efficiently. How can Google take your query, compare it to billions of web pages, and return the answer in less than one second? How can one store information so as to balance the competing needs for fast data retrieval and fast data modification? To help us answer questions like these, we will analyze and implement stacks, queues, trees, linked lists, graphs and hash tables. Students who have received credit for a course for which Computer Science 201 is a prerequisite are not eligible to enroll in Computer Science 201. Prerequisite: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE201">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/W2011?CS%FE201">Winter 2011</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE201">Spring 2011</a></em> --  <strong>Staff</strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS204_Software_D"></a>
<h4>CS 204: Software Design</h4> It’s easy to write a mediocre computer program, and lots of people do it. Good programs are quite a bit harder to write, and are correspondingly less common. In this course, we will study techniques, tools, and habits that will improve your chances of writing good software. While working on several medium-sized programming projects, we will investigate code construction techniques, debugging and profiling tools, testing methodologies, UML, principles of object-oriented design, design patterns, and user interface design. Prerequisite: Computer Science 111 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/F2010?CS%FE204">Fall 2010</a>, <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE204">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#adalal">A. Csizmar Dalal</a></strong>, <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jondich">J. Ondich</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS254_Automata_a"></a>
<h4>CS 254: Automata and Computability</h4> An introduction to the theory of computation, emphasizing an understanding of what problems can and cannot be solved by computers. Topics include formal models of computation, including finite-state automata, pushdown automata, and Turing machines; formal languages, including regular expressions and context-free grammars; and computability and uncomputability. Time permitting, we will discuss computational and mathematical applications, like parsing and Godel's incompleteness theorem. Prerequisites: Computer Science 201; Computer Science 202 or Mathematics 236.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE254">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jondich">J. Ondich</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS311_Computer_G"></a>
<h4>CS 311: Computer Graphics</h4> The raster graphics representation of 2- and 3- dimensional images. Topics include frame buffers, data structures for image storage, geometric transformations, hidden surface algorithms, raytracing, splines, and lighting models. Prerequisites: Computer Science 201, Mathematics 232 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE311">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#jgoldfea">J. Goldfeather</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS324_Data_Minin"></a>
<h4>CS 324: Data Mining</h4> How does Google understand what it is you're looking for? How does Amazon.com figure out what items you might want to buy? These questions and others are part of machine learning and data mining, two highly related fields at the crossroads of artificial intelligence, database systems, and statistics. Machine learning concerns itself with getting a computer to learn or discover patterns, whereas data mining focuses this task on large databases. Much of the material will be presented through primary source research papers, and the content will include techniques such as classification, clustering, association rules, web mining, collaborative filtering, and others. Prerequisite: Computer Science 201 or consent of the instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR, QRE; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE324">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#dmusican">D. Musicant</a></strong>
</div>
</li>
<li>
<div class="catalog">
<a name="CS352_Advanced_A"></a>
<h4>CS 352: Advanced Algorithms</h4> A second course on designing and analyzing efficient algorithms to solve computational problems. We will survey some algorithmic design techniques that apply broadly throughout computer science, including discussion of wide-ranging applications. A sampling of potential topics: approximation algorithms (can we efficiently compute near-optimal solutions even when finding exact solutions is computationally intractable?); randomized algorithms (does flipping coins help in designing faster/simpler algorithms?); online algorithms (how do we analyze an algorithm that needs to make decisions before the entire input arrives?); advanced data structures; complexity theory. As time and interest permit, we will mix recently published algorithmic papers with classical results. Prerequisites: Computer Science 252 or permission of instructor.<em> 6 credit; Mathematics and Natural Sciences, FSR; offered <a href="http://www.carleton.edu/cgi-bin/enroll/full/S2011?CS%FE352">Spring 2011</a></em> --  <strong><a title="Faculty Bio &amp; Information" href="/curricular/cs/faculty/?textonly=1#dlibenno">D. Liben-Nowell</a></strong>
</div>
</li>
</ul>
<div class="related">
<h3>Related Courses</h3>
<p>Physics 247 Digital Electronics<br><p>
Physics 343 Electronics<br>
</p></div>
</div>


</div>
</div>
<div class="preSidebar">


<div class="assets">
<h3>Related Documents</h3>
<ul>
<li><div class="name"><a href="/curricular/cs/assets/cscourses201112.pdf"><strong>2011-2012 CS Course Guide</strong></a> (34 KB PDF Document)</div>
<div class="date">21 March 2011</div> <div class="description">CS Course Guide</div>
</li>
</ul>
</div>


</div>
<div class="sidebarSpacer">
<img src="/reason_package/reason_4.0/www/ui_images/stp.gif" width="80" height="2" alt="" />
</div>


<p class="fullGraphicsLink"><a href="?order_courses_by_term=1">View full graphics version of this page</a></p>


<div class="navigation">


<div id="minisiteNavigation"><div class="list"><ul class="navListTop"><li class="navListItem open"><a href="/curricular/cs/?textonly=1" class="home"><span>Computer Science Home</span></a><ul class="navList"><li class="navListItem closed"><a href="/curricular/cs/overview/?textonly=1">Overview</a></li><li class="navListItem closed item1"><a href="/curricular/cs/faculty/?textonly=1">Faculty &amp; Staff</a></li><li class="navListItem open current item2"><strong>Courses</strong></li><li class="navListItem closed item3"><a href="/curricular/cs/major/?textonly=1">The Major</a></li><li class="navListItem closed item4"><a href="/curricular/cs/resources/?textonly=1">Resources</a></li><li class="navListItem closed item5"><a href="/curricular/cs/events/?textonly=1">Events</a></li><li class="navListItem closed item6"><a href="/curricular/cs/news/?textonly=1">Newsletter</a></li><li class="navListItem closed item7"><a href="/curricular/cs/students/?textonly=1">Students</a></li><li class="navListItem closed item8 jump"><a href="http://www.mathcs.carleton.edu/cs_comps">Computer Science Comps</a></li><li class="navListItem closed item9"><a href="/curricular/cs/summerresearch/?textonly=1">Summer Research Opportunities</a></li><li class="navListItem closed item10"><a href="/curricular/cs/CS_Career_Resources/?textonly=1">Career Resources</a></li><li class="navListItem closed item11"><a href="/curricular/cs/newstudents/?textonly=1">Guide for New Students</a></li></ul></li></ul>
</div></div>

</div>
</div>
</div>
<div id="footer" class="maintained">


<div id="maintained">
<div id="maintainer">Computer Science pages maintained by <a href="mailto:sjandro@carleton.edu">Sue Jandro</a></div><div id="lastUpdated">This page was last updated on 21 March 2011</div></div>




<p id="footerLoginLink"><a href="https://apps.carleton.edu/login/">Login</a></p>

</div>
</div>
</body>
</html>
